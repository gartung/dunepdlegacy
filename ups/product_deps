########################################################################
# product_deps
#
#   Define attributes of a package to be built and distributed as a UPS
#   product.
#
# This file is parsed as a consequence of sourcing the
# setup_for_development or setup_deps shell-agnostic scripts.
#
# Generated by cetmodules 3.22.02 at Wed Sep 13 16:53:29 CDT 2023
########################################################################
=======
# The parent line must be the first non-comment line in the file
# This line defines the product name and version
parent dunepdlegacy     #v1_00_00
defaultqual    e26

####################################
# Basic information.

##################
# parent
##################
#
# The parent line - if present - must be the first non-comment line in
# the file, defining the product's name and version. Any information not
# specified will be taken from the CMake project(<project-name> VERSION
# <dot-version>) call in the CMakeLists.txt in the parent directory to
# the one containing this file.
#
# Recommended:
#
#>  parent <product-name>
#
# Deprecated (will produce a warning):
#
#>  parent <product-name> <product-ups-version> [<chain>]...

##################
# chain[s]
##################
#
# List the UPS chains ("-c", -t, "new," "current," "old...") to be defined
# for the package. The trailing `s' is optional and without meaning.
# Multiple chains may be specified with one or more declarations.
#
#>  chains <chain>...

##################
# defaultqual
##################
#
# The default colon-delimited qualifier set used if one is not provided
# to setup_for_development. Build type (debug, opt or prof) is optional.
#
# Deprecated - a qualifier should generally be provided to the
# invocation of setup_for_development or setup_deps.
#
#>  defaultqual <qualifiers>

##################
# noarch
##################
#
# Specify this keyword if the package is architecture-independent. This
# does not necessarily imply a lack of qualifiers or of a
# fully-qualified (fq) subdirectory in the installed package.
#
#>  noarch

##################
# no_fq_dir
##################
#
# Specify this keyword if the UPS package should not have a
# fully-qualified (fq) subdirectory in the installed package. This does
# not necessarily imply noarch or a lack of qualifiers, but caution
# should be observed if using this keyword for architecture-dependent
# packages or those with qualifiers to avoid overwritten files when
# multiple different variants of the package are installed in the same
# UPS area.
#
#>  no_fq_dir

##################
# define_pythonpath
##################
#
# If define_pythonpath is enabled, the appropriate path will be appended
# to PYTHONPATH.
#
#>  define_pythonpath
####################################
parent		dunepdlegacy
defaultqual	e20
####################################

####################################
# Directory specifications.
#
# These optional definitions specify the installed directories where
# various files headers, libraries, and executables will be found. Some
# have defaults; others must be specified if files of that type are to
# be installed. Minimize configuration complexity by using only those
# definitions necessary for the package.
#
##################
# Notes:
#
# * Use directory specifications only if the defaults are inappropriate
#   for your product.
#
# * A specification with defaults may be obviated by specifying a base
#   of `-' as the only argument.
#
# * A directory will be created and appropriate UPS table file entries
#   made *if and only if* files of that type are installed using the
#   appropriate directive.
#
##################
# Format:
#
#>  <spec>		<base>		[<subdir-name>]
#
# <base> may be `-' (negate defaults), "product_dir", or "fq_dir" as
# desired.
#
# Available <spec>s and defaults:
#
#>  bindir		fq_dir		bin
#
#     Built binaries for public use.
#
#>  cmakemoduledir	product_dir	Modules
#
#     CMake modules.
#
#>  fcldir		product_dir	fcl
#
#     FHiCL framework configuration files.
#
#>  fwdir
#
#     Framework data.
#
#>  gdmldir		product_dir	gdml
#
#     GDML geometry description files.
#
#>  incdir		product_dir	include
#
#     Headers.
#
#>  libdir		fq_dir		lib
#
#     Compiled and other libraries.
#
#>  perllib		product_dir	perl5lib
#
#     Perl modules, etc.
#
#>  set_fwdir
#
#     An additional location for framework data to be added to
#     FW_SEARCH_PATH; may be specified multiple times.
#
#>  set_wpdir
#
#     An additional location for wirecell data to be added to
#     WIRECELL_PATH; may be specified multiple times.
#
#>  testdir		product_dir	test
#
#     Tests.
#
#>  wpdir
#
#     Wirecell data.
#
####################################
bindir	fq_dir		bin
fcldir	product_dir	fcl
fwdir	product_dir	files
incdir	product_dir	include
libdir	fq_dir		lib
####################################


####################################
# Table fragment.
#
####################################
table_fragment_begin
    pathPrepend(FW_SEARCH_PATH, ${DUNEPDLEGACY_DIR}/files)
table_fragment_end
####################################

product         version         optional
artdaq_core     v3_10_02
art             v3_14_04
cetmodules      v3_24_01        -          only_for_build
gallery		v1_22_06
nufinder        v1_02_01
end_product_list

# for what the qualifiers mean, see
# https://cdcvs.fnal.gov/redmine/projects/cet-is-public/wiki/AboutQualifiers


# -nq- here means there is no qualifier
# a "-" here means the dependent product is not required by the parent and will not be setup

qualifier         artdaq_core             art              gallery      nufinder   notes
e26:debug         e26:debug:s131          e26:debug        e26:debug     -nq-
e26:prof          e26:prof:s131           e26:prof         e26:prof      -nq-
c14:debug         c14:debug:s131          c14:debug        c14:debug     -nq-
c14:prof          c14:prof:s131           c14:prof         c14:prof      -nq-

# Preserve tabs and formatting in emacs and vi / vim:

### Local Variables:
### mode: sh
### tab-width: 8
### End:

# vi:set ts=8 noexpandtab:
